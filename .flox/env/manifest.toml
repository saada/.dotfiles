## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
asciinema.pkg-path = "asciinema"
asciinema.pkg-group = "asciinema"
aws-iam-authenticator.pkg-path = "aws-iam-authenticator"
aws-iam-authenticator.pkg-group = "aws-iam-authenticator"
bash.pkg-path = "bash"
bash.pkg-group = "bash"
bat.pkg-path = "bat"
bat.pkg-group = "bat"
cfssl.pkg-path = "cfssl"
cfssl.pkg-group = "cfssl"
coreutils.pkg-path = "coreutils"
coreutils.pkg-group = "coreutils"
dagger.pkg-path = "dagger"
dagger.pkg-group = "dagger"
deno.pkg-path = "deno"
deno.pkg-group = "deno"
direnv.pkg-path = "direnv"
direnv.pkg-group = "direnv"
doctl.pkg-path = "doctl"
doctl.pkg-group = "doctl"
doitlive.pkg-path = "doitlive"
doitlive.pkg-group = "doitlive"
edencommon.pkg-path = "edencommon"
edencommon.pkg-group = "edencommon"
fastlane.pkg-path = "fastlane"
fastlane.pkg-group = "fastlane"
fd.pkg-path = "fd"
fd.pkg-group = "fd"
ffmpeg.pkg-path = "ffmpeg"
ffmpeg.pkg-group = "ffmpeg"
fx.pkg-path = "fx"
fx.pkg-group = "fx"
fzf.pkg-path = "fzf"
fzf.pkg-group = "fzf"
gh.pkg-path = "gh"
gh.pkg-group = "gh"
git.pkg-path = "git"
git.pkg-group = "git"
git-lfs.pkg-path = "git-lfs"
git-lfs.pkg-group = "git-lfs"
gnused.pkg-path = "gnused"
gnused.pkg-group = "gnused"
go.pkg-path = "go"
go.pkg-group = "go"
go-task.pkg-path = "go-task"
go-task.pkg-group = "go-task"
helm.pkg-path = "helm"
helm.pkg-group = "helm"
helm.systems = ["aarch64-linux", "x86_64-linux"]
helix.pkg-path = "helix"
helix.pkg-group = "helix"
htop.pkg-path = "htop"
htop.pkg-group = "htop"
jq.pkg-path = "jq"
jq.pkg-group = "jq"
k9s.pkg-path = "k9s"
k9s.pkg-group = "k9s"
kind.pkg-path = "kind"
kind.pkg-group = "kind"
kubectl.pkg-path = "kubectl"
kubectl.pkg-group = "kubectl"
kubectx.pkg-path = "kubectx"
kubectx.pkg-group = "kubectx"
lazydocker.pkg-path = "lazydocker"
lazydocker.pkg-group = "lazydocker"
lazygit.pkg-path = "lazygit"
lazygit.pkg-group = "lazygit"
libass.pkg-path = "libass"
libass.pkg-group = "libass"
maestro.pkg-path = "maestro"
maestro.pkg-group = "maestro"
mkcert.pkg-path = "mkcert"
mkcert.pkg-group = "mkcert"
ncdu.pkg-path = "ncdu"
ncdu.pkg-group = "ncdu"
neovim.pkg-path = "neovim"
neovim.pkg-group = "neovim"
octant.pkg-path = "octant"
octant.pkg-group = "octant"
ollama.pkg-path = "ollama"
ollama.pkg-group = "ollama"
parallel.pkg-path = "parallel"
parallel.pkg-group = "parallel"
pulumi.pkg-path = "pulumi"
pulumi.pkg-group = "pulumi"
ripgrep.pkg-path = "ripgrep"
ripgrep.pkg-group = "ripgrep"
starship.pkg-path = "starship"
starship.pkg-group = "starship"
tailwindcss.pkg-path = "tailwindcss"
tailwindcss.pkg-group = "tailwindcss"
terraform.pkg-path = "terraform"
terraform.pkg-group = "terraform"
tree.pkg-path = "tree"
tree.pkg-group = "tree"
watch.pkg-path = "watch"
watch.pkg-group = "watch"
watchman.pkg-path = "watchman"
watchman.pkg-group = "watchman"
yq.pkg-path = "yq"
yq.pkg-group = "yq"
zellij.pkg-path = "zellij"
zellij.pkg-group = "zellij"
zoxide.pkg-path = "zoxide"
zoxide.pkg-group = "zoxide"
ruby.pkg-path = "ruby"
ruby.pkg-group = "ruby"
flyctl.pkg-path = "flyctl"
flyctl.pkg-group = "flyctl"
awscli2.pkg-path = "awscli2"
awscli2.pkg-group = "awscli2"
python314.pkg-path = "python314"
python314.pkg-group = "python314"
fish.pkg-path = "fish"
fish.version = "4.0.0"
fish.pkg-group = "fish"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell specific profiles go here:
# bash = ...
# zsh  = ...
# fish = ...


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
# Uncomment to disable CUDA detection.
# cuda-detection = false
